{"version":3,"sources":["../../src/TableHeaderCell.tsx","../../src/Table.tsx","App.tsx","index.tsx"],"names":["StyledTH","styled","sortable","SortToggle","sort","React","TableHeaderCell","onClick","role","sortByValue","undefined","ReactStyledTableCell","ReactStyledTableContainer","Table","className","handleSortChange","value","nextSortOrder","sorter","R","setSortedData","setSortByValue","setSortOrder","columns","column","key","label","sortOrder","sortedData","idx","index","item","renderTableCell","countries","registerLocale","require","BlueTableCell","GreenTableCell","CustomTable","Page","div","Section","section","data_1","name","age","movie_rating","city","region","country","data_1_columns","render","Array","map","_val","style","color","code","getAlpha2Code","toLowerCase","data_2","inventory","size","data_2_columns","tableCellComponent","data","App","tableCell","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7092f6ee.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { ReactStyledTableColumn, SortOrder } from '.'\n\ninterface StyledTHProps {\n  sortable?: boolean\n}\n\nconst StyledTH = styled.th`\n  ${({ sortable }: StyledTHProps) => sortable && 'cursor: pointer;'}\n`\n\nexport interface TableHeaderCellProps extends ReactStyledTableColumn {\n  sortByValue?: string\n  sortOrder: SortOrder\n  onClick: (value: string) => void\n}\n\nconst SortToggle = ({ sort }: { sort: SortOrder }) => {\n  switch (sort) {\n    case 'ascend':\n      return <span>&#8595;</span>\n    case 'descend':\n      return <span>&#8593;</span>\n\n    default:\n      return (\n        <React.Fragment>\n          <span>&#8593;</span> <span>&#8595;</span>\n        </React.Fragment>\n      )\n  }\n}\n\nconst TableHeaderCell: React.FC<TableHeaderCellProps> = ({\n  value,\n  label,\n  sortable,\n  sortByValue,\n  sortOrder,\n  onClick\n}) => {\n  const handleClick = () => {\n    if (sortable) onClick(value)\n  }\n\n  return (\n    <StyledTH sortable={sortable} onClick={handleClick} role='button'>\n      {label}\n      {sortable && (\n        <SortToggle sort={sortByValue === value ? sortOrder : undefined} />\n      )}\n    </StyledTH>\n  )\n}\n\nexport default TableHeaderCell\n","import * as React from 'react'\nimport * as R from 'ramda'\nimport styled, { StyledComponent } from 'styled-components'\nimport TableHeaderCell from './TableHeaderCell'\nimport { ReactStyledTableDataItem, ReactStyledTableColumn, SortOrder } from '.'\n\ninterface Props\n  extends React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n  > {\n  data: ReactStyledTableDataItem[]\n  columns: ReactStyledTableColumn[]\n  tableCell?: StyledComponent<'td', any, {}, never>\n}\n\nexport const ReactStyledTableCell = styled.td`\n  min-width: 140px;\n`\n\nexport const ReactStyledTableContainer = styled.div`\n  max-width: 500px;\n  overflow-x: auto;\n`\n\nexport const Table = ({ data, columns, tableCell, className }: Props) => {\n  const [sortedData, setSortedData] = React.useState<\n    ReactStyledTableDataItem[]\n  >(data)\n  const [sortByValue, setSortByValue] = React.useState<string>()\n  const [sortOrder, setSortOrder] = React.useState<SortOrder>()\n\n  const handleSortChange = (value: string) => {\n    let nextSortOrder: SortOrder\n    switch (sortOrder) {\n      case 'ascend':\n        nextSortOrder = 'descend'\n        break\n      case undefined:\n        nextSortOrder = 'ascend'\n        break\n    }\n\n    if (!nextSortOrder) {\n      setSortedData(data)\n    } else if (value) {\n      const sorter = R[nextSortOrder](R.prop(value))\n      setSortedData(R.sortWith([sorter], sortedData))\n    }\n\n    setSortByValue(value)\n    setSortOrder(nextSortOrder)\n  }\n\n  const renderTableCell = (\n    item: ReactStyledTableDataItem,\n    column: ReactStyledTableColumn,\n    index: number\n  ) => {\n    return React.createElement(\n      column.tableCellComponent || tableCell || ReactStyledTableCell,\n      { key: index },\n      column.render ? column.render(item[column.value]) : item[column.value]\n    )\n  }\n\n  return (\n    <ReactStyledTableContainer className={className}>\n      <table>\n        <thead>\n          <tr>\n            {columns.map((column) => (\n              <TableHeaderCell\n                key={column.value}\n                value={column.value}\n                label={column.label}\n                sortable={column.sortable}\n                sortByValue={sortByValue}\n                sortOrder={sortOrder}\n                onClick={handleSortChange}\n              />\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {sortedData.map((item, idx) => (\n            <tr key={idx}>\n              {columns.map((column, idx) => renderTableCell(item, column, idx))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </ReactStyledTableContainer>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport {\n  Table,\n  ReactStyledTableCell,\n  ReactStyledTableColumn,\n  ReactStyledTableDataItem,\n  ReactStyledTableDataItemValue\n} from '@alarivan/react-styled-table'\nimport '../node_modules/flag-icon-css/css/flag-icon.min.css'\nimport countries from 'i18n-iso-countries'\n\ncountries.registerLocale(require('i18n-iso-countries/langs/en.json'))\n\nconst BlueTableCell = styled(ReactStyledTableCell)`\n  background: lightblue;\n`\n\nconst GreenTableCell = styled(ReactStyledTableCell)`\n  background: lightgreen;\n`\n\nconst CustomTable = styled(Table)`\n  background: magenta;\n`\n\nconst Page = styled.div`\n  max-width: 1024px;\n  margin: 0 auto;\n  padding: 1rem;\n`\n\nconst Section = styled.section`\n  margin: 0 auto 1rem;\n`\n\nconst data_1 = [\n  {\n    name: 'John',\n    age: 29,\n    movie_rating: 4,\n    city: 'Vancouver',\n    region: 'British Columbia',\n    country: 'Canada'\n  },\n  {\n    name: 'Sarah',\n    age: 32,\n    movie_rating: 5,\n    city: 'Frankfurt',\n    region: 'Hesse',\n    country: 'Germany'\n  },\n  {\n    name: 'Dave',\n    age: 44,\n    movie_rating: 4,\n    city: 'San Diego',\n    region: 'California',\n    country: 'United States'\n  }\n]\n\nconst data_1_columns = [\n  {\n    label: 'Name',\n    value: 'name',\n    sortable: true\n  },\n  {\n    label: 'Rating',\n    value: 'movie_rating',\n    render: (value: ReactStyledTableDataItemValue) => {\n      return (\n        <>\n          {[...Array(value)].map((_val, idx) => (\n            <span style={{ color: '#ffa500' }} key={idx}>\n              &#9733;\n            </span>\n          ))}\n        </>\n      )\n    }\n  },\n  {\n    label: 'Age',\n    value: 'age',\n    sortable: true\n  },\n  {\n    label: 'City',\n    value: 'city'\n  },\n  {\n    label: 'State / Province',\n    value: 'region'\n  },\n  {\n    label: 'Country',\n    value: 'country',\n    render: (value: ReactStyledTableDataItemValue) => {\n      let code\n      if (value === 'United States') {\n        code = 'us'\n      } else {\n        code = countries.getAlpha2Code(value as string, 'en')\n      }\n\n      if (code) {\n        return (\n          <span className={`flag-icon flag-icon-${code.toLowerCase()}`}></span>\n        )\n      }\n      return value\n    }\n  }\n]\n\nconst data_2 = [\n  {\n    item: 'apple',\n    inventory: 12,\n    size: 'medium'\n  },\n  {\n    item: 'blueberry',\n    inventory: 103,\n    size: 'small'\n  },\n  {\n    item: 'grapefruit',\n    inventory: 4,\n    size: 'large'\n  },\n  {\n    item: 'strawberry',\n    inventory: 14,\n    size: 'small'\n  }\n]\n\nconst data_2_columns = [\n  {\n    label: 'Food Product',\n    tableCellComponent: BlueTableCell,\n    value: 'item'\n  },\n  {\n    label: 'Size',\n    value: 'size'\n  },\n  {\n    label: 'Inventory',\n    value: 'inventory',\n    render: (value: ReactStyledTableDataItemValue) => (\n      <span style={{ color: '#6fdb6f' }}>{value}</span>\n    )\n  }\n]\n\nconst data: ReactStyledTableDataItem[] = [\n  {\n    name: 'John',\n    movie_rating: 4,\n    city: 'Vancouver',\n    country: 'Canada'\n  },\n  {\n    name: 'Sarah',\n    movie_rating: 5,\n    city: 'Frankfurt',\n    country: 'Germany'\n  }\n]\n\nconst columns: ReactStyledTableColumn[] = [\n  {\n    label: 'Name',\n    value: 'name',\n    sortable: true\n  },\n  {\n    label: 'Rating',\n    value: 'movie_rating',\n    render: (value: ReactStyledTableDataItemValue) => {\n      return (\n        <>\n          {[...Array(value)].map((_val, idx) => (\n            <span style={{ color: '#ffa500' }} key={idx}>\n              &#9733;\n            </span>\n          ))}\n        </>\n      )\n    }\n  },\n  {\n    label: 'City',\n    value: 'city'\n  },\n  {\n    label: 'Country',\n    value: 'country',\n    tableCellComponent: BlueTableCell\n  }\n]\n\nconst App = () => {\n  return (\n    <Page>\n      <h1>React Styled Table Component</h1>\n      <Section>\n        <h2>Table with render functions:</h2>\n        <Table data={data_1} columns={data_1_columns} />\n      </Section>\n      <Section>\n        <h2>Table with custom table cell component in columns config:</h2>\n        <Table data={data_2} columns={data_2_columns} />\n      </Section>\n      <Section>\n        <h2>\n          Table with custom table cell components in Table as prop and in\n          columns config:\n        </h2>\n        <CustomTable data={data} columns={columns} tableCell={GreenTableCell} />\n      </Section>\n    </Page>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}